{
  "mcpServers": {
    "context7": {
      "description": "Library documentation (FastMCP, httpx, Pydantic API references)",
      "command": "npx",
      "args": ["-y", "@context7/mcp-server"]
    },
    "exa": {
      "description": "Code search for examples, tutorials, and MCP patterns",
      "command": "npx",
      "args": ["-y", "@exa/mcp-server"],
      "env": {
        "EXA_API_KEY": "${EXA_API_KEY}"
      }
    },
    "github": {
      "description": "Access Flowise source code and other MCP implementations",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_TOKEN": "${GITHUB_TOKEN}"
      }
    },
    "sequential-thinking": {
      "description": "Complex problem solving and design decisions",
      "command": "npx",
      "args": ["-y", "@sequentialthinking/mcp-server"]
    },
    "clean-code": {
      "description": "Code planning and architecture design",
      "command": "npx",
      "args": ["-y", "@cleancode/mcp-server"]
    },
    "vibe-check": {
      "description": "Validate approach and catch assumptions early",
      "command": "npx",
      "args": ["-y", "@vibe-check/mcp-server"]
    },
    "pieces": {
      "description": "Remember design decisions and store code snippets",
      "command": "pieces",
      "args": ["mcp"]
    },
    "wayfinder": {
      "description": "Discover additional MCPs as needs emerge during development",
      "command": "uvx",
      "args": ["mcp-wayfinder"]
    },
    "chrome-devtools": {
      "description": "[OPTIONAL] Test Flowise web UI alongside API development",
      "disabled": true,
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-chrome-devtools"]
    },
    "ide": {
      "description": "[OPTIONAL] Real-time Python diagnostics and type checking",
      "disabled": true,
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-ide"]
    }
  },
  "notes": {
    "setup": "Replace ${EXA_API_KEY} and ${GITHUB_TOKEN} with actual values in your environment",
    "essential": "First 8 MCPs (context7 through wayfinder) are essential for development",
    "optional": "Last 2 MCPs (chrome-devtools, ide) are optional - enable by removing 'disabled: true'",
    "usage": {
      "context7": "Use for FastMCP, httpx, Pydantic documentation lookups",
      "exa": "Search for 'fastmcp http client example', 'pydantic validation patterns', etc.",
      "github": "Read FlowiseAI/Flowise source code, search for similar MCP servers",
      "sequential-thinking": "Complex decisions like error handling strategy, async patterns",
      "clean-code": "Plan architecture before coding - ensure clean structure",
      "vibe-check": "Before major decisions, validate approach and check assumptions",
      "pieces": "Store important decisions, API patterns, code snippets for later reference",
      "wayfinder": "Search for additional MCPs: 'search for python testing mcp', 'search for API mocking mcp'"
    }
  }
}
